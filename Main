/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
C#, VB, Perl, Swift, Prolog, Javascript, Pascal, HTML, CSS, JS
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>

int preencherMatriz();
int alterarMoradores();
int exibirMenu();
int consultarMoradorAp();
int imprimirMoradores();
int somarMatrizes();
int somarMatrizesPorAndar();
maiorNumeroMoradores();

int matriz[20][20],i, j;
int num, num2, newValue, acao, soma, andar;
  
int main (void){
    printf("Preencha os apartamentos com o numero de moradores:");
    preencherMatriz();
    exibirMenu();
    
}

int exibirMenu(){
    system("cls");
    printf("----------Menu-----------\n");
    printf("(1) - Alterar numero de moradores\n");
    printf("(2) - Consultar o numero de moradores de uma unidade\n");
    printf("(3) - Imprimir o número de moradores de cada unidade\n");
    printf("(4) - Ver numero total de moradores no predio\n");
    printf("(5) - Ver numero de moradores por andar\n");
    printf("(6) - Checar os apartamentos disponiveis\n");
    printf("(7) - Identificar a unidade com o maior número de moradores\n");
    printf("(8) - Sair\n");
    printf("Digite o numero da ação desejada:\n");
    scanf("%d", &acao);
    
    if(acao == 1){
        alterarMoradores();
        exibirMenu();
    }else if(acao == 2){
        consultarMoradorAp();
        exibirMenu();
    }else if(acao == 3){
        imprimirMoradores();
        exibirMenu();
    }else if(acao == 4){
        somarMatrizes();
        exibirMenu();
    }else if(acao == 5){
        somarMatrizesPorAndar();
        exibirMenu();
    }else if(acao == 6){
        disponibilidade();
        exibirMenu();
    }else if(acao == 7){
        maiorNumeroMoradores();
        exibirMenu();
    }else if(acao == 8){
        system("break");
    }else{
        exibirMenu();
    }
    system("pause");
}

int preencherMatriz(){

  
  for ( i=0; i<=8; i++ )
    for ( j=0; j<=8; j++ )
    {
      
      matriz[ i ][ j ] = rand() % 10;
      printf ("\nApartamento[%d][%d] = ", i, j);
    }

  
  for ( i=0; i<=8; i++ )
    for ( j=0; j<=8; j++ )
    {
      printf ("\nApartamento[%d][%d] = %d\n", i, j,matriz[ i ][ j ]);
    }
  
  getch();
  
  
  return(0);
  
}

int alterarMoradores(){
    
    printf("Digite o primeiro indice da matriz:");
    scanf("%d", &num);
    printf("Digite o segundo indice da matriz:");
    scanf("%d", &num2);
    printf("Digite o valor que voce deseja colocar:");
    scanf("%d", &newValue);
    
    matriz[num][num2] = newValue;
    printf("A matriz [%d][%d] foi alterada para o numero de %d moradores",num,num2,matriz[num][num2]);
    
}

int consultarMoradorAp(){
    printf("Digite o primeiro indice da matriz:");
    scanf("%d", &num);
    printf("Digite o segundo indice da matriz:");
    scanf("%d", &num2);
    printf("A quantidade de moradores da matriz que voce solicitou eh: %d", matriz[num][num2]);
}

int imprimirMoradores(){
    for ( i=0; i<=8; i++ )
    for ( j=0; j<=8; j++ )
    {
      printf ("\nApartamento[%d][%d] = %d\n", i, j,matriz[ i ][ j ]);
    }
    system("pause");
}

int somarMatrizes(){
    int soma = 0;
        for(i=1;i<=8;i++){
        for(j=1;j<=8;j++){
            soma += matriz[i][j];
            }
        }
    printf("a quantidade de moradores eh: %d",soma);
}

int somarMatrizesPorAndar(){
    int soma = 0;
    printf("Digite o andar que deseja consultar:");
    scanf("%d",&andar);

        for(i=1;i<=8;i++){
        for(j=1;j<=8;j++){
            if(i == andar){
                 soma += matriz[i][j];
            }
            }
            printf("a quantidade de moradores pelo andar %d eh: %d",andar,soma);
        }
}

int disponibilidade(){
    
        for(i=1;i<=8;i++){
        for(j=1;j<=8;j++){
            if(matriz[i][j] == 0){
                printf("No andar [%d] o apartamento [%d] esta disponivel",i,j);
                }
            }
           
        }
}

int maiorNumeroMoradores(){
    int linha, coluna, maior=0;
    
        for(i=1;i<=8;i++){
        for(j=1;j<=8;j++){
            if(matriz[i][j] > maior){
                maior = matriz[i][j];
                linha = i;
                coluna = j;
                }
            }
        }
        printf("o apartamento [%d][%d] tem o maior numero de moradores, %d no total",linha,coluna,maior);
}

